// Generated by CoffeeScript 1.10.0
(function() {
  var Cookie, Response, Status;

  Cookie = require('cookie');

  Status = require('statuses');

  Response = (function() {
    var options;

    options = {};

    function Response(res, opt) {
      this.res = res;
      this.$statusCode = 200;
      this.$headers = {
        'content-type': 'text/html; charset=utf-8'
      };
      this.$cookies = [];
      this.$content = null;
      options = opt;
      this.responded = false;
    }

    Response.prototype.content = function(val) {
      this.$content = val;
      return this;
    };

    Response.prototype.status = function(code) {
      this.$statusCode = Status(code);
      return this;
    };

    Response.prototype.cookie = function(key, val, options) {
      this.$cookies.push(Cookie.serialize(key, val, options));
      return this;
    };

    Response.prototype.header = function(key, val) {
      key = key.toLowerCase();
      this.$headers[key] = val;
      return this;
    };

    Response.prototype.respond = function() {
      var key, ref, val;
      this.res.statusCode = this.$statusCode;
      this.res.statusMessage = Status[this.$statusCode];
      ref = this.$headers;
      for (key in ref) {
        val = ref[key];
        key = key.replace(/(^|-)([a-z])/g, function(m, a, b) {
          return a + b.toUpperCase();
        });
        this.res.setHeader(key, val);
      }
      if (this.$cookies.length > 0) {
        this.res.setHeader('Set-Cookie', this.$cookies);
      }
      if (this.$content instanceof Function) {
        return this.$content.apply(this);
      } else {
        return this.res.end(this.$content);
      }
    };

    return Response;

  })();

  module.exports = Response;

}).call(this);
