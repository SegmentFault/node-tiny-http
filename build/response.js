// Generated by CoffeeScript 1.10.0
(function() {
  var Cookie, Response, Status;

  Cookie = require('cookie');

  Status = require('statuses');

  Response = (function() {
    var content, cookies, headers, options, statusCode;

    statusCode = 200;

    headers = {
      'content-type': 'text/html; charset=utf-8'
    };

    cookies = [];

    content = null;

    options = {};

    function Response(res, opt) {
      this.res = res;
      options = opt;
    }

    Response.prototype.content = function(val) {
      content = val;
      return this;
    };

    Response.prototype.status = function(code) {
      statusCode = Status(code);
      return this;
    };

    Response.prototype.cookie = function(key, val, options) {
      cookies.push(Cookie.serialize(key, val, options));
      return this;
    };

    Response.prototype.header = function(key, val) {
      key = key.toLowerCase();
      headers[key] = val;
      return this;
    };

    Response.prototype.respond = function() {
      var key, val;
      this.res.statusCode = statusCode;
      this.res.statusMessage = Status[statusCode];
      for (key in headers) {
        val = headers[key];
        key = key.replace(/(^|-)([a-z])/g, function(m, a, b) {
          return a + b.toUpperCase();
        });
        this.res.setHeader(key, val);
      }
      if (cookies.length > 0) {
        this.res.setHeader('Set-Cookie', cookies);
      }
      if (content instanceof Function) {
        content.apply(this);
        if (!this.res.finished) {
          return this.res.end();
        }
      } else {
        return this.res.end(content);
      }
    };

    return Response;

  })();

  module.exports = Response;

}).call(this);
