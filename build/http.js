// Generated by CoffeeScript 1.10.0
(function() {
  var Http, HttpServer, Result, Router, Url,
    slice = [].slice;

  HttpServer = require('http');

  Url = require('url');

  Result = require('./result');

  Router = require('./router');

  Http = (function() {
    function Http() {
      this.resultInstance = new Result;
      this.routerInstance = new Router;
    }

    Http.prototype.listen = function(options) {
      var http;
      http = HttpServer.createServer(this.routerInstance.handler(this.resultInstance.result, options));
      if (options.sock != null) {
        return http.listen(options.sock);
      } else {
        options.port = options.port || 8888;
        options.host = options.host || 'localhost';
        return http.listen(options.port, options.host);
      }
    };

    Http.prototype.result = function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return this.resultInstance.register.apply(this.resultInstance, args);
    };

    Http.prototype.use = function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return this.routerInstance.use.apply(this.routerInstance, args);
    };

    Http.prototype.on = function(pattern, fn, method) {
      if (method == null) {
        method = null;
      }
      return this.routerInstance.register(method, pattern, fn);
    };

    Http.prototype.get = function(pattern, fn) {
      return this.routerInstance.register('GET', pattern, fn);
    };

    Http.prototype.post = function(pattern, fn) {
      return this.routerInstance.register('POST', pattern, fn);
    };

    Http.prototype.assets = function(path, dir) {
      return this.routerInstance.register('GET', (path.replace(/\/+$/g, '')) + '/%path', function(done) {
        var i, len, parts, ref, val;
        parts = [];
        path = this.request.get('path');
        ref = path.split('/');
        for (i = 0, len = ref.length; i < len; i++) {
          val = ref[i];
          if (!val.match(/^\.+$/)) {
            parts.push(val);
          }
        }
        return done('file', dir + '/' + (parts.join('/')));
      }).raw();
    };

    return Http;

  })();

  module.exports = Http;

}).call(this);
