// Generated by CoffeeScript 1.10.0
(function() {
  var Form, Request, Url;

  Form = require('formidable');

  Url = require('url');

  Request = (function() {
    var files, mergeParams, params;

    params = {};

    files = {};

    mergeParams = function(target) {
      var k, results, v;
      results = [];
      for (k in target) {
        v = target[k];
        results.push(params[k] = v);
      }
      return results;
    };

    function Request(req, cb) {
      var form, parts;
      this.req = req;
      parts = Url.parse(this.req.url, true);
      this.method = this.req.method.toUpperCase();
      this.uri = parts.href;
      this.scheme = parts.protocol;
      this.host = parts.hostname;
      this.port = parts.port;
      this.path = parts.pathname != null ? parts.pathname : '/';
      params = parts.query;
      if (this.method === 'POST') {
        form = new Form.IncomingForm;
        form.parse(this.req, function(err, _fields, _files) {
          if (err != null) {
            return cb(this);
          }
          mergeParams(_fields);
          files = _files;
          return cb(this);
        });
      } else {
        cb(this);
      }
    }

    Request.prototype.set = function(key, val) {
      if (val == null) {
        val = null;
      }
      if (val === null && key instanceof Array) {
        return mergeParams(key);
      } else {
        return params[key] = val;
      }
    };

    Request.prototype.get = function(key, defaults) {
      if (defaults == null) {
        defaults = null;
      }
      if (params[key] != null) {
        return params[key];
      } else {
        return defaults;
      }
    };

    Request.prototype.file = function(key) {
      if (files[key] != null) {
        return files[key];
      } else {
        return null;
      }
    };

    return Request;

  })();

  module.exports = Request;

}).call(this);
